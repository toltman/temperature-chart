{"id":"Yg6X","dependencies":[{"name":"/home/toltm/data-viz/temperature/node_modules/vega-lite/build/src/selection.js.map","includedInParent":true,"mtime":499162500000},{"name":"/home/toltm/data-viz/temperature/node_modules/vega-lite/src/selection.ts","includedInParent":true,"mtime":499162500000},{"name":"/home/toltm/data-viz/temperature/package.json","includedInParent":true,"mtime":1591970318768},{"name":"/home/toltm/data-viz/temperature/node_modules/vega-lite/build/package.json","includedInParent":true,"mtime":499162500000},{"name":"vega-util","loc":{"line":1,"column":25},"parent":"/home/toltm/data-viz/temperature/node_modules/vega-lite/build/src/selection.js","resolved":"/home/toltm/data-viz/temperature/node_modules/vega-util/index.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.isLegendBinding=i,exports.isLegendStreamBinding=s,exports.defaultConfig=exports.SELECTION_ID=void 0;var e=require(\"vega-util\");const o=\"_vgsid_\";exports.SELECTION_ID=\"_vgsid_\";const l={single:{on:\"click\",fields:[\"_vgsid_\"],resolve:\"global\",empty:\"all\",clear:\"dblclick\"},multi:{on:\"click\",fields:[\"_vgsid_\"],toggle:\"event.shiftKey\",resolve:\"global\",empty:\"all\",clear:\"dblclick\"},interval:{on:\"[mousedown, window:mouseup] > window:mousemove!\",encodings:[\"x\",\"y\"],translate:\"[mousedown, window:mouseup] > window:mousemove!\",zoom:\"wheel!\",mark:{fill:\"#333\",fillOpacity:.125,stroke:\"white\"},resolve:\"global\",clear:\"dblclick\"}};function i(e){return!(!e||\"legend\"!==e&&!e.legend)}function s(o){return i(o)&&(0,e.isObject)(o)}exports.defaultConfig=l;"},"sourceMaps":{"js":{"mappings":[{"source":"../../src/selection.ts","name":null,"original":{"line":344,"column":1},"generated":{"line":1,"column":0}},{"source":"../../src/selection.ts","name":null,"original":{"line":344,"column":1},"generated":{"line":1,"column":13}},{"source":"../../src/selection.ts","name":null,"original":{"line":344,"column":1},"generated":{"line":1,"column":20}},{"source":"../../src/selection.ts","name":null,"original":{"line":344,"column":1},"generated":{"line":1,"column":35}},{"source":"../../src/selection.ts","name":null,"original":{"line":344,"column":1},"generated":{"line":1,"column":43}},{"source":"../../src/selection.ts","name":null,"original":{"line":344,"column":1},"generated":{"line":1,"column":56}},{"source":"../../src/selection.ts","name":null,"original":{"line":344,"column":1},"generated":{"line":1,"column":57}},{"source":"../../src/selection.ts","name":null,"original":{"line":344,"column":1},"generated":{"line":1,"column":64}},{"source":"../../src/selection.ts","name":null,"original":{"line":344,"column":1},"generated":{"line":1,"column":68}},{"source":"../../src/selection.ts","name":null,"original":{"line":344,"column":1},"generated":{"line":1,"column":76}},{"source":"../../src/selection.ts","name":null,"original":{"line":344,"column":1},"generated":{"line":1,"column":92}},{"source":"../../src/selection.ts","name":null,"original":{"line":344,"column":1},"generated":{"line":1,"column":94}},{"source":"../../src/selection.ts","name":null,"original":{"line":344,"column":1},"generated":{"line":1,"column":102}},{"source":"../../src/selection.ts","name":null,"original":{"line":344,"column":1},"generated":{"line":1,"column":124}},{"source":"../../src/selection.ts","name":null,"original":{"line":344,"column":1},"generated":{"line":1,"column":126}},{"source":"../../src/selection.ts","name":null,"original":{"line":344,"column":1},"generated":{"line":1,"column":134}},{"source":"../../src/selection.ts","name":null,"original":{"line":344,"column":1},"generated":{"line":1,"column":148}},{"source":"../../src/selection.ts","name":null,"original":{"line":344,"column":1},"generated":{"line":1,"column":156}},{"source":"../../src/selection.ts","name":null,"original":{"line":344,"column":1},"generated":{"line":1,"column":174}},{"source":"../../src/selection.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":176}},{"source":"../../src/selection.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":180}},{"source":"../../src/selection.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":182}},{"source":"../../src/selection.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":190}},{"source":"../../src/selection.ts","name":null,"original":{"line":8,"column":7},"generated":{"line":1,"column":203}},{"source":"../../src/selection.ts","name":null,"original":{"line":8,"column":13},"generated":{"line":1,"column":209}},{"source":"../../src/selection.ts","name":null,"original":{"line":8,"column":28},"generated":{"line":1,"column":211}},{"source":"../../src/selection.ts","name":null,"original":{"line":344,"column":1},"generated":{"line":1,"column":221}},{"source":"../../src/selection.ts","name":null,"original":{"line":344,"column":1},"generated":{"line":1,"column":229}},{"source":"../../src/selection.ts","name":null,"original":{"line":8,"column":28},"generated":{"line":1,"column":242}},{"source":"../../src/selection.ts","name":null,"original":{"line":311,"column":7},"generated":{"line":1,"column":252}},{"source":"../../src/selection.ts","name":null,"original":{"line":311,"column":13},"generated":{"line":1,"column":258}},{"source":"../../src/selection.ts","name":null,"original":{"line":311,"column":46},"generated":{"line":1,"column":260}},{"source":"../../src/selection.ts","name":null,"original":{"line":312,"column":2},"generated":{"line":1,"column":261}},{"source":"../../src/selection.ts","name":null,"original":{"line":312,"column":10},"generated":{"line":1,"column":268}},{"source":"../../src/selection.ts","name":null,"original":{"line":313,"column":4},"generated":{"line":1,"column":269}},{"source":"../../src/selection.ts","name":null,"original":{"line":313,"column":8},"generated":{"line":1,"column":272}},{"source":"../../src/selection.ts","name":null,"original":{"line":314,"column":4},"generated":{"line":1,"column":280}},{"source":"../../src/selection.ts","name":null,"original":{"line":314,"column":12},"generated":{"line":1,"column":287}},{"source":"../../src/selection.ts","name":null,"original":{"line":8,"column":28},"generated":{"line":1,"column":288}},{"source":"../../src/selection.ts","name":null,"original":{"line":315,"column":4},"generated":{"line":1,"column":299}},{"source":"../../src/selection.ts","name":null,"original":{"line":315,"column":13},"generated":{"line":1,"column":307}},{"source":"../../src/selection.ts","name":null,"original":{"line":316,"column":4},"generated":{"line":1,"column":316}},{"source":"../../src/selection.ts","name":null,"original":{"line":316,"column":11},"generated":{"line":1,"column":322}},{"source":"../../src/selection.ts","name":null,"original":{"line":317,"column":4},"generated":{"line":1,"column":328}},{"source":"../../src/selection.ts","name":null,"original":{"line":317,"column":11},"generated":{"line":1,"column":334}},{"source":"../../src/selection.ts","name":null,"original":{"line":319,"column":2},"generated":{"line":1,"column":346}},{"source":"../../src/selection.ts","name":null,"original":{"line":319,"column":9},"generated":{"line":1,"column":352}},{"source":"../../src/selection.ts","name":null,"original":{"line":320,"column":4},"generated":{"line":1,"column":353}},{"source":"../../src/selection.ts","name":null,"original":{"line":320,"column":8},"generated":{"line":1,"column":356}},{"source":"../../src/selection.ts","name":null,"original":{"line":321,"column":4},"generated":{"line":1,"column":364}},{"source":"../../src/selection.ts","name":null,"original":{"line":321,"column":12},"generated":{"line":1,"column":371}},{"source":"../../src/selection.ts","name":null,"original":{"line":8,"column":28},"generated":{"line":1,"column":372}},{"source":"../../src/selection.ts","name":null,"original":{"line":322,"column":4},"generated":{"line":1,"column":383}},{"source":"../../src/selection.ts","name":null,"original":{"line":322,"column":12},"generated":{"line":1,"column":390}},{"source":"../../src/selection.ts","name":null,"original":{"line":323,"column":4},"generated":{"line":1,"column":407}},{"source":"../../src/selection.ts","name":null,"original":{"line":323,"column":13},"generated":{"line":1,"column":415}},{"source":"../../src/selection.ts","name":null,"original":{"line":324,"column":4},"generated":{"line":1,"column":424}},{"source":"../../src/selection.ts","name":null,"original":{"line":324,"column":11},"generated":{"line":1,"column":430}},{"source":"../../src/selection.ts","name":null,"original":{"line":325,"column":4},"generated":{"line":1,"column":436}},{"source":"../../src/selection.ts","name":null,"original":{"line":325,"column":11},"generated":{"line":1,"column":442}},{"source":"../../src/selection.ts","name":null,"original":{"line":327,"column":2},"generated":{"line":1,"column":454}},{"source":"../../src/selection.ts","name":null,"original":{"line":327,"column":12},"generated":{"line":1,"column":463}},{"source":"../../src/selection.ts","name":null,"original":{"line":328,"column":4},"generated":{"line":1,"column":464}},{"source":"../../src/selection.ts","name":null,"original":{"line":328,"column":8},"generated":{"line":1,"column":467}},{"source":"../../src/selection.ts","name":null,"original":{"line":329,"column":4},"generated":{"line":1,"column":517}},{"source":"../../src/selection.ts","name":null,"original":{"line":329,"column":15},"generated":{"line":1,"column":527}},{"source":"../../src/selection.ts","name":null,"original":{"line":329,"column":16},"generated":{"line":1,"column":528}},{"source":"../../src/selection.ts","name":null,"original":{"line":329,"column":21},"generated":{"line":1,"column":532}},{"source":"../../src/selection.ts","name":null,"original":{"line":330,"column":4},"generated":{"line":1,"column":537}},{"source":"../../src/selection.ts","name":null,"original":{"line":330,"column":15},"generated":{"line":1,"column":547}},{"source":"../../src/selection.ts","name":null,"original":{"line":331,"column":4},"generated":{"line":1,"column":597}},{"source":"../../src/selection.ts","name":null,"original":{"line":331,"column":10},"generated":{"line":1,"column":602}},{"source":"../../src/selection.ts","name":null,"original":{"line":332,"column":4},"generated":{"line":1,"column":611}},{"source":"../../src/selection.ts","name":null,"original":{"line":332,"column":10},"generated":{"line":1,"column":616}},{"source":"../../src/selection.ts","name":null,"original":{"line":332,"column":11},"generated":{"line":1,"column":617}},{"source":"../../src/selection.ts","name":null,"original":{"line":332,"column":17},"generated":{"line":1,"column":622}},{"source":"../../src/selection.ts","name":null,"original":{"line":332,"column":25},"generated":{"line":1,"column":629}},{"source":"../../src/selection.ts","name":null,"original":{"line":332,"column":38},"generated":{"line":1,"column":641}},{"source":"../../src/selection.ts","name":null,"original":{"line":332,"column":45},"generated":{"line":1,"column":646}},{"source":"../../src/selection.ts","name":null,"original":{"line":332,"column":53},"generated":{"line":1,"column":653}},{"source":"../../src/selection.ts","name":null,"original":{"line":333,"column":4},"generated":{"line":1,"column":662}},{"source":"../../src/selection.ts","name":null,"original":{"line":333,"column":13},"generated":{"line":1,"column":670}},{"source":"../../src/selection.ts","name":null,"original":{"line":334,"column":4},"generated":{"line":1,"column":679}},{"source":"../../src/selection.ts","name":null,"original":{"line":334,"column":11},"generated":{"line":1,"column":685}},{"source":"../../src/selection.ts","name":null,"original":{"line":338,"column":6},"generated":{"line":1,"column":698}},{"source":"../../src/selection.ts","name":null,"original":{"line":338,"column":16},"generated":{"line":1,"column":707}},{"source":"../../src/selection.ts","name":null,"original":{"line":338,"column":32},"generated":{"line":1,"column":709}},{"source":"../../src/selection.ts","name":null,"original":{"line":339,"column":9},"generated":{"line":1,"column":712}},{"source":"../../src/selection.ts","name":null,"original":{"line":339,"column":11},"generated":{"line":1,"column":721}},{"source":"../../src/selection.ts","name":null,"original":{"line":339,"column":29},"generated":{"line":1,"column":724}},{"source":"../../src/selection.ts","name":null,"original":{"line":339,"column":20},"generated":{"line":1,"column":735}},{"source":"../../src/selection.ts","name":null,"original":{"line":339,"column":43},"generated":{"line":1,"column":739}},{"source":"../../src/selection.ts","name":null,"original":{"line":339,"column":48},"generated":{"line":1,"column":741}},{"source":"../../src/selection.ts","name":null,"original":{"line":342,"column":6},"generated":{"line":1,"column":749}},{"source":"../../src/selection.ts","name":null,"original":{"line":342,"column":16},"generated":{"line":1,"column":758}},{"source":"../../src/selection.ts","name":null,"original":{"line":342,"column":38},"generated":{"line":1,"column":760}},{"source":"../../src/selection.ts","name":null,"original":{"line":343,"column":9},"generated":{"line":1,"column":763}},{"source":"../../src/selection.ts","name":null,"original":{"line":343,"column":9},"generated":{"line":1,"column":770}},{"source":"../../src/selection.ts","name":null,"original":{"line":343,"column":25},"generated":{"line":1,"column":772}},{"source":"../../src/selection.ts","name":null,"original":{"line":343,"column":34},"generated":{"line":1,"column":777}},{"source":"../../src/selection.ts","name":null,"original":{"line":343,"column":43},"generated":{"line":1,"column":779}},{"source":"../../src/selection.ts","name":null,"original":{"line":343,"column":43},"generated":{"line":1,"column":781}},{"source":"../../src/selection.ts","name":null,"original":{"line":343,"column":43},"generated":{"line":1,"column":791}},{"source":"../../src/selection.ts","name":null,"original":{"line":344,"column":1},"generated":{"line":1,"column":794}},{"source":"../../src/selection.ts","name":null,"original":{"line":344,"column":1},"generated":{"line":1,"column":802}},{"source":"../../src/selection.ts","name":null,"original":{"line":344,"column":1},"generated":{"line":1,"column":816}}],"sources":{"../../src/selection.ts":"import {Binding, Color, Cursor, Stream, Vector2} from 'vega';\nimport {isObject} from 'vega-util';\nimport {SingleDefUnitChannel} from './channel';\nimport {FieldName, PrimitiveValue} from './channeldef';\nimport {DateTime} from './datetime';\nimport {Dict} from './util';\n\nexport const SELECTION_ID = '_vgsid_';\nexport type SelectionType = 'single' | 'multi' | 'interval';\nexport type SelectionResolution = 'global' | 'union' | 'intersect';\n\nexport type SelectionInit = PrimitiveValue | DateTime;\nexport type SelectionInitInterval = Vector2<boolean> | Vector2<number> | Vector2<string> | Vector2<DateTime>;\n\nexport type SelectionInitMapping = Dict<SelectionInit>;\nexport type SelectionInitIntervalMapping = Dict<SelectionInitInterval>;\n\nexport type LegendStreamBinding = {legend: string | Stream};\nexport type LegendBinding = 'legend' | LegendStreamBinding;\n\nexport interface BaseSelectionConfig {\n  /**\n   * Clears the selection, emptying it of all values. Can be a\n   * [Event Stream](https://vega.github.io/vega/docs/event-streams/) or `false` to disable.\n   *\n   * __Default value:__ `dblclick`.\n   *\n   * __See also:__ [`clear`](https://vega.github.io/vega-lite/docs/clear.html) documentation.\n   */\n  clear?: Stream | string | boolean;\n\n  /**\n   * A [Vega event stream](https://vega.github.io/vega/docs/event-streams/) (object or selector) that triggers the selection.\n   * For interval selections, the event stream must specify a [start and end](https://vega.github.io/vega/docs/event-streams/#between-filters).\n   */\n  on?: Stream | string;\n  /**\n   * With layered and multi-view displays, a strategy that determines how\n   * selections' data queries are resolved when applied in a filter transform,\n   * conditional encoding rule, or scale domain.\n   *\n   * __See also:__ [`resolve`](https://vega.github.io/vega-lite/docs/selection-resolve.html) documentation.\n   */\n  resolve?: SelectionResolution;\n\n  // TODO(https://github.com/vega/vega-lite/issues/2596).\n  // predicate?: string;\n  // domain?: SelectionDomain;\n\n  /**\n   * An array of encoding channels. The corresponding data field values\n   * must match for a data tuple to fall within the selection.\n   *\n   * __See also:__ [`encodings`](https://vega.github.io/vega-lite/docs/project.html) documentation.\n   */\n  encodings?: SingleDefUnitChannel[];\n\n  /**\n   * An array of field names whose values must match for a data tuple to\n   * fall within the selection.\n   *\n   * __See also:__ [`fields`](https://vega.github.io/vega-lite/docs/project.html) documentation.\n   */\n  fields?: FieldName[];\n\n  /**\n   * By default, `all` data values are considered to lie within an empty selection.\n   * When set to `none`, empty selections contain no data values.\n   */\n  empty?: 'all' | 'none';\n}\n\nexport interface SingleSelectionConfig extends BaseSelectionConfig {\n  /**\n   * When set, a selection is populated by input elements (also known as dynamic query widgets)\n   * or by interacting with the corresponding legend. Direct manipulation interaction is disabled by default;\n   * to re-enable it, set the selection's [`on`](https://vega.github.io/vega-lite/docs/selection.html#common-selection-properties) property.\n   *\n   * Legend bindings are restricted to selections that only specify a single field or encoding.\n   *\n   * Query widget binding takes the form of Vega's [input element binding definition](https://vega.github.io/vega/docs/signals/#bind)\n   * or can be a mapping between projected field/encodings and binding definitions.\n   *\n   * __See also:__ [`bind`](https://vega.github.io/vega-lite/docs/bind.html) documentation.\n   */\n  bind?: Binding | Record<string, Binding> | LegendBinding;\n\n  /**\n   * When true, an invisible voronoi diagram is computed to accelerate discrete\n   * selection. The data value _nearest_ the mouse cursor is added to the selection.\n   *\n   * __See also:__ [`nearest`](https://vega.github.io/vega-lite/docs/nearest.html) documentation.\n   */\n  nearest?: boolean;\n\n  /**\n   * Initialize the selection with a mapping between [projected channels or field names](https://vega.github.io/vega-lite/docs/project.html) and initial values.\n   *\n   * __See also:__ [`init`](https://vega.github.io/vega-lite/docs/init.html) documentation.\n   */\n  init?: SelectionInitMapping;\n}\n\nexport interface MultiSelectionConfig extends BaseSelectionConfig {\n  /**\n   * Controls whether data values should be toggled or only ever inserted into\n   * multi selections. Can be `true`, `false` (for insertion only), or a\n   * [Vega expression](https://vega.github.io/vega/docs/expressions/).\n   *\n   * __Default value:__ `true`, which corresponds to `event.shiftKey` (i.e.,\n   * data values are toggled when a user interacts with the shift-key pressed).\n   *\n   * Setting the value to the Vega expression `\"true\"` will toggle data values\n   * without the user pressing the shift-key.\n   *\n   * __See also:__ [`toggle`](https://vega.github.io/vega-lite/docs/toggle.html) documentation.\n   */\n  toggle?: string | boolean;\n\n  /**\n   * When true, an invisible voronoi diagram is computed to accelerate discrete\n   * selection. The data value _nearest_ the mouse cursor is added to the selection.\n   *\n   * __See also:__ [`nearest`](https://vega.github.io/vega-lite/docs/nearest.html) documentation.\n   */\n  nearest?: boolean;\n\n  /**\n   * Initialize the selection with a mapping between [projected channels or field names](https://vega.github.io/vega-lite/docs/project.html) and an initial\n   * value (or array of values).\n   *\n   * __See also:__ [`init`](https://vega.github.io/vega-lite/docs/init.html) documentation.\n   */\n  init?: SelectionInitMapping[];\n\n  /**\n   * When set, a selection is populated by interacting with the corresponding legend. Direct manipulation interaction is disabled by default;\n   * to re-enable it, set the selection's [`on`](https://vega.github.io/vega-lite/docs/selection.html#common-selection-properties) property.\n   *\n   * Legend bindings are restricted to selections that only specify a single field or encoding.\n   */\n  bind?: LegendBinding;\n}\n\n// Similar to BaseMarkConfig but the field documentations are specificly for an interval mark.\nexport interface BrushConfig {\n  /**\n   * The fill color of the interval mark.\n   *\n   * __Default value:__ `\"#333333\"`\n   *\n   */\n  fill?: Color;\n  /**\n   * The fill opacity of the interval mark (a value between `0` and `1`).\n   *\n   * __Default value:__ `0.125`\n   */\n  fillOpacity?: number;\n  /**\n   * The stroke color of the interval mark.\n   *\n   * __Default value:__ `\"#ffffff\"`\n   */\n  stroke?: Color;\n  /**\n   * The stroke opacity of the interval mark (a value between `0` and `1`).\n   */\n  strokeOpacity?: number;\n  /**\n   * The stroke width of the interval mark.\n   */\n  strokeWidth?: number;\n  /**\n   * An array of alternating stroke and space lengths, for creating dashed or dotted lines.\n   */\n  strokeDash?: number[];\n  /**\n   * The offset (in pixels) with which to begin drawing the stroke dash array.\n   */\n  strokeDashOffset?: number;\n  /**\n   * The mouse cursor used over the interval mark. Any valid [CSS cursor type](https://developer.mozilla.org/en-US/docs/Web/CSS/cursor#Values) can be used.\n   */\n  cursor?: Cursor;\n}\n\nexport interface IntervalSelectionConfig extends BaseSelectionConfig {\n  /**\n   * When truthy, allows a user to interactively move an interval selection\n   * back-and-forth. Can be `true`, `false` (to disable panning), or a\n   * [Vega event stream definition](https://vega.github.io/vega/docs/event-streams/)\n   * which must include a start and end event to trigger continuous panning.\n   *\n   * __Default value:__ `true`, which corresponds to\n   * `[mousedown, window:mouseup] > window:mousemove!` which corresponds to\n   * clicks and dragging within an interval selection to reposition it.\n   *\n   * __See also:__ [`translate`](https://vega.github.io/vega-lite/docs/translate.html) documentation.\n   */\n  translate?: string | boolean;\n\n  /**\n   * When truthy, allows a user to interactively resize an interval selection.\n   * Can be `true`, `false` (to disable zooming), or a [Vega event stream\n   * definition](https://vega.github.io/vega/docs/event-streams/). Currently,\n   * only `wheel` events are supported.\n   *\n   * __Default value:__ `true`, which corresponds to `wheel!`.\n   *\n   * __See also:__ [`zoom`](https://vega.github.io/vega-lite/docs/zoom.html) documentation.\n   */\n  zoom?: string | boolean;\n\n  /**\n   * Establishes a two-way binding between the interval selection and the scales\n   * used within the same view. This allows a user to interactively pan and\n   * zoom the view.\n   *\n   * __See also:__ [`bind`](https://vega.github.io/vega-lite/docs/bind.html) documentation.\n   */\n  bind?: 'scales';\n\n  /**\n   * An interval selection also adds a rectangle mark to depict the\n   * extents of the interval. The `mark` property can be used to customize the\n   * appearance of the mark.\n   *\n   * __See also:__ [`mark`](https://vega.github.io/vega-lite/docs/selection-mark.html) documentation.\n   */\n  mark?: BrushConfig;\n\n  /**\n   * Initialize the selection with a mapping between [projected channels or field names](https://vega.github.io/vega-lite/docs/project.html) and arrays of\n   * initial values.\n   *\n   * __See also:__ [`init`](https://vega.github.io/vega-lite/docs/init.html) documentation.\n   */\n  init?: SelectionInitIntervalMapping;\n}\n\nexport interface BaseSelectionDef<T extends 'single' | 'multi' | 'interval'> {\n  /**\n   * Determines the default event processing and data query for the selection. Vega-Lite currently supports three selection types:\n   *\n   * - `\"single\"` -- to select a single discrete data value on `click`.\n   * - `\"multi\"` -- to select multiple discrete data value; the first value is selected on `click` and additional values toggled on shift-`click`.\n   * - `\"interval\"` -- to select a continuous range of data values on `drag`.\n   */\n  type: T;\n}\n\nexport interface SingleSelection extends BaseSelectionDef<'single'>, SingleSelectionConfig {}\n\nexport interface MultiSelection extends BaseSelectionDef<'multi'>, MultiSelectionConfig {}\n\nexport interface IntervalSelection extends BaseSelectionDef<'interval'>, IntervalSelectionConfig {}\n\nexport type SelectionDef = SingleSelection | MultiSelection | IntervalSelection;\n\nexport type SelectionExtent =\n  | {\n      /**\n       * The name of a selection.\n       */\n      selection: string;\n      /**\n       * The field name to extract selected values for, when a selection is [projected](https://vega.github.io/vega-lite/docs/project.html)\n       * over multiple fields or encodings.\n       */\n      field?: FieldName;\n    }\n  | {\n      /**\n       * The name of a selection.\n       */\n      selection: string;\n      /**\n       * The encoding channel to extract selected values for, when a selection is [projected](https://vega.github.io/vega-lite/docs/project.html)\n       * over multiple fields or encodings.\n       */\n      encoding?: SingleDefUnitChannel;\n    };\n\nexport interface SelectionConfig {\n  /**\n   * The default definition for a [`single`](https://vega.github.io/vega-lite/docs/selection.html#type) selection. All properties and transformations\n   *  for a single selection definition (except `type`) may be specified here.\n   *\n   * For instance, setting `single` to `{\"on\": \"dblclick\"}` populates single selections on double-click by default.\n   */\n  single?: SingleSelectionConfig;\n  /**\n   * The default definition for a [`multi`](https://vega.github.io/vega-lite/docs/selection.html#type) selection. All properties and transformations\n   * for a multi selection definition (except `type`) may be specified here.\n   *\n   * For instance, setting `multi` to `{\"toggle\": \"event.altKey\"}` adds additional values to\n   * multi selections when clicking with the alt-key pressed by default.\n   */\n  multi?: MultiSelectionConfig;\n  /**\n   * The default definition for an [`interval`](https://vega.github.io/vega-lite/docs/selection.html#type) selection. All properties and transformations\n   * for an interval selection definition (except `type`) may be specified here.\n   *\n   * For instance, setting `interval` to `{\"translate\": false}` disables the ability to move\n   * interval selections by default.\n   */\n  interval?: IntervalSelectionConfig;\n}\n\nexport const defaultConfig: SelectionConfig = {\n  single: {\n    on: 'click',\n    fields: [SELECTION_ID],\n    resolve: 'global',\n    empty: 'all',\n    clear: 'dblclick'\n  },\n  multi: {\n    on: 'click',\n    fields: [SELECTION_ID],\n    toggle: 'event.shiftKey',\n    resolve: 'global',\n    empty: 'all',\n    clear: 'dblclick'\n  },\n  interval: {\n    on: '[mousedown, window:mouseup] > window:mousemove!',\n    encodings: ['x', 'y'],\n    translate: '[mousedown, window:mouseup] > window:mousemove!',\n    zoom: 'wheel!',\n    mark: {fill: '#333', fillOpacity: 0.125, stroke: 'white'},\n    resolve: 'global',\n    clear: 'dblclick'\n  }\n};\n\nexport function isLegendBinding(bind: any): bind is LegendBinding {\n  return !!bind && (bind === 'legend' || !!bind.legend);\n}\n\nexport function isLegendStreamBinding(bind: any): bind is LegendStreamBinding {\n  return isLegendBinding(bind) && isObject(bind);\n}\n"},"lineCount":null}},"error":null,"hash":"12dbdd7f5be31e55195443acbdf8621e","cacheData":{"env":{}}}