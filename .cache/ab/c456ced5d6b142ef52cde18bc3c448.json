{"id":"R3Xt","dependencies":[{"name":"/home/toltm/data-viz/temperature/node_modules/vega-lite/build/src/sort.js.map","includedInParent":true,"mtime":499162500000},{"name":"/home/toltm/data-viz/temperature/node_modules/vega-lite/src/sort.ts","includedInParent":true,"mtime":499162500000},{"name":"/home/toltm/data-viz/temperature/package.json","includedInParent":true,"mtime":1591974159200},{"name":"/home/toltm/data-viz/temperature/node_modules/vega-lite/build/package.json","includedInParent":true,"mtime":499162500000},{"name":"vega-util","loc":{"line":1,"column":24},"parent":"/home/toltm/data-viz/temperature/node_modules/vega-lite/build/src/sort.js","resolved":"/home/toltm/data-viz/temperature/node_modules/vega-util/index.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.isSortByChannel=o,exports.isSortByEncoding=i,exports.isSortField=n,exports.isSortArray=s,exports.DEFAULT_SORT_OP=void 0;var t=require(\"vega-util\");const r=\"min\";exports.DEFAULT_SORT_OP=\"min\";const e={x:1,y:1,color:1,fill:1,stroke:1,strokeWidth:1,size:1,shape:1,fillOpacity:1,strokeOpacity:1,opacity:1,text:1};function o(t){return t in e}function i(t){return!!t&&!!t.encoding}function n(t){return!(!t||\"count\"!==t.op&&!t.field)}function s(r){return!!r&&(0,t.isArray)(r)}"},"sourceMaps":{"js":{"mappings":[{"source":"../../src/sort.ts","name":null,"original":{"line":121,"column":1},"generated":{"line":1,"column":0}},{"source":"../../src/sort.ts","name":null,"original":{"line":121,"column":1},"generated":{"line":1,"column":13}},{"source":"../../src/sort.ts","name":null,"original":{"line":121,"column":1},"generated":{"line":1,"column":20}},{"source":"../../src/sort.ts","name":null,"original":{"line":121,"column":1},"generated":{"line":1,"column":35}},{"source":"../../src/sort.ts","name":null,"original":{"line":121,"column":1},"generated":{"line":1,"column":43}},{"source":"../../src/sort.ts","name":null,"original":{"line":121,"column":1},"generated":{"line":1,"column":56}},{"source":"../../src/sort.ts","name":null,"original":{"line":121,"column":1},"generated":{"line":1,"column":57}},{"source":"../../src/sort.ts","name":null,"original":{"line":121,"column":1},"generated":{"line":1,"column":64}},{"source":"../../src/sort.ts","name":null,"original":{"line":121,"column":1},"generated":{"line":1,"column":68}},{"source":"../../src/sort.ts","name":null,"original":{"line":121,"column":1},"generated":{"line":1,"column":76}},{"source":"../../src/sort.ts","name":null,"original":{"line":121,"column":1},"generated":{"line":1,"column":92}},{"source":"../../src/sort.ts","name":null,"original":{"line":121,"column":1},"generated":{"line":1,"column":94}},{"source":"../../src/sort.ts","name":null,"original":{"line":121,"column":1},"generated":{"line":1,"column":102}},{"source":"../../src/sort.ts","name":null,"original":{"line":121,"column":1},"generated":{"line":1,"column":119}},{"source":"../../src/sort.ts","name":null,"original":{"line":121,"column":1},"generated":{"line":1,"column":121}},{"source":"../../src/sort.ts","name":null,"original":{"line":121,"column":1},"generated":{"line":1,"column":129}},{"source":"../../src/sort.ts","name":null,"original":{"line":121,"column":1},"generated":{"line":1,"column":141}},{"source":"../../src/sort.ts","name":null,"original":{"line":121,"column":1},"generated":{"line":1,"column":143}},{"source":"../../src/sort.ts","name":null,"original":{"line":121,"column":1},"generated":{"line":1,"column":151}},{"source":"../../src/sort.ts","name":null,"original":{"line":121,"column":1},"generated":{"line":1,"column":163}},{"source":"../../src/sort.ts","name":null,"original":{"line":121,"column":1},"generated":{"line":1,"column":165}},{"source":"../../src/sort.ts","name":null,"original":{"line":121,"column":1},"generated":{"line":1,"column":173}},{"source":"../../src/sort.ts","name":null,"original":{"line":121,"column":1},"generated":{"line":1,"column":194}},{"source":"../../src/sort.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":196}},{"source":"../../src/sort.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":200}},{"source":"../../src/sort.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":202}},{"source":"../../src/sort.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":210}},{"source":"../../src/sort.ts","name":null,"original":{"line":28,"column":7},"generated":{"line":1,"column":223}},{"source":"../../src/sort.ts","name":null,"original":{"line":28,"column":13},"generated":{"line":1,"column":229}},{"source":"../../src/sort.ts","name":null,"original":{"line":28,"column":31},"generated":{"line":1,"column":231}},{"source":"../../src/sort.ts","name":null,"original":{"line":121,"column":1},"generated":{"line":1,"column":237}},{"source":"../../src/sort.ts","name":null,"original":{"line":121,"column":1},"generated":{"line":1,"column":245}},{"source":"../../src/sort.ts","name":null,"original":{"line":28,"column":31},"generated":{"line":1,"column":261}},{"source":"../../src/sort.ts","name":null,"original":{"line":72,"column":0},"generated":{"line":1,"column":267}},{"source":"../../src/sort.ts","name":null,"original":{"line":72,"column":6},"generated":{"line":1,"column":273}},{"source":"../../src/sort.ts","name":null,"original":{"line":72,"column":30},"generated":{"line":1,"column":275}},{"source":"../../src/sort.ts","name":null,"original":{"line":73,"column":2},"generated":{"line":1,"column":276}},{"source":"../../src/sort.ts","name":null,"original":{"line":73,"column":5},"generated":{"line":1,"column":278}},{"source":"../../src/sort.ts","name":null,"original":{"line":74,"column":2},"generated":{"line":1,"column":280}},{"source":"../../src/sort.ts","name":null,"original":{"line":74,"column":5},"generated":{"line":1,"column":282}},{"source":"../../src/sort.ts","name":null,"original":{"line":75,"column":2},"generated":{"line":1,"column":284}},{"source":"../../src/sort.ts","name":null,"original":{"line":75,"column":9},"generated":{"line":1,"column":290}},{"source":"../../src/sort.ts","name":null,"original":{"line":76,"column":2},"generated":{"line":1,"column":292}},{"source":"../../src/sort.ts","name":null,"original":{"line":76,"column":8},"generated":{"line":1,"column":297}},{"source":"../../src/sort.ts","name":null,"original":{"line":77,"column":2},"generated":{"line":1,"column":299}},{"source":"../../src/sort.ts","name":null,"original":{"line":77,"column":10},"generated":{"line":1,"column":306}},{"source":"../../src/sort.ts","name":null,"original":{"line":78,"column":2},"generated":{"line":1,"column":308}},{"source":"../../src/sort.ts","name":null,"original":{"line":78,"column":15},"generated":{"line":1,"column":320}},{"source":"../../src/sort.ts","name":null,"original":{"line":79,"column":2},"generated":{"line":1,"column":322}},{"source":"../../src/sort.ts","name":null,"original":{"line":79,"column":8},"generated":{"line":1,"column":327}},{"source":"../../src/sort.ts","name":null,"original":{"line":80,"column":2},"generated":{"line":1,"column":329}},{"source":"../../src/sort.ts","name":null,"original":{"line":80,"column":9},"generated":{"line":1,"column":335}},{"source":"../../src/sort.ts","name":null,"original":{"line":81,"column":2},"generated":{"line":1,"column":337}},{"source":"../../src/sort.ts","name":null,"original":{"line":81,"column":15},"generated":{"line":1,"column":349}},{"source":"../../src/sort.ts","name":null,"original":{"line":82,"column":2},"generated":{"line":1,"column":351}},{"source":"../../src/sort.ts","name":null,"original":{"line":82,"column":17},"generated":{"line":1,"column":365}},{"source":"../../src/sort.ts","name":null,"original":{"line":83,"column":2},"generated":{"line":1,"column":367}},{"source":"../../src/sort.ts","name":null,"original":{"line":83,"column":11},"generated":{"line":1,"column":375}},{"source":"../../src/sort.ts","name":null,"original":{"line":84,"column":2},"generated":{"line":1,"column":377}},{"source":"../../src/sort.ts","name":null,"original":{"line":84,"column":8},"generated":{"line":1,"column":382}},{"source":"../../src/sort.ts","name":null,"original":{"line":89,"column":6},"generated":{"line":1,"column":385}},{"source":"../../src/sort.ts","name":null,"original":{"line":89,"column":16},"generated":{"line":1,"column":394}},{"source":"../../src/sort.ts","name":null,"original":{"line":89,"column":32},"generated":{"line":1,"column":396}},{"source":"../../src/sort.ts","name":null,"original":{"line":90,"column":9},"generated":{"line":1,"column":399}},{"source":"../../src/sort.ts","name":null,"original":{"line":90,"column":9},"generated":{"line":1,"column":406}},{"source":"../../src/sort.ts","name":null,"original":{"line":90,"column":14},"generated":{"line":1,"column":411}},{"source":"../../src/sort.ts","name":null,"original":{"line":111,"column":6},"generated":{"line":1,"column":413}},{"source":"../../src/sort.ts","name":null,"original":{"line":111,"column":16},"generated":{"line":1,"column":422}},{"source":"../../src/sort.ts","name":null,"original":{"line":111,"column":36},"generated":{"line":1,"column":424}},{"source":"../../src/sort.ts","name":null,"original":{"line":112,"column":9},"generated":{"line":1,"column":427}},{"source":"../../src/sort.ts","name":null,"original":{"line":112,"column":11},"generated":{"line":1,"column":435}},{"source":"../../src/sort.ts","name":null,"original":{"line":112,"column":21},"generated":{"line":1,"column":440}},{"source":"../../src/sort.ts","name":null,"original":{"line":112,"column":25},"generated":{"line":1,"column":442}},{"source":"../../src/sort.ts","name":null,"original":{"line":115,"column":6},"generated":{"line":1,"column":451}},{"source":"../../src/sort.ts","name":null,"original":{"line":115,"column":16},"generated":{"line":1,"column":460}},{"source":"../../src/sort.ts","name":null,"original":{"line":115,"column":31},"generated":{"line":1,"column":462}},{"source":"../../src/sort.ts","name":null,"original":{"line":116,"column":9},"generated":{"line":1,"column":465}},{"source":"../../src/sort.ts","name":null,"original":{"line":116,"column":11},"generated":{"line":1,"column":474}},{"source":"../../src/sort.ts","name":null,"original":{"line":116,"column":35},"generated":{"line":1,"column":477}},{"source":"../../src/sort.ts","name":null,"original":{"line":116,"column":20},"generated":{"line":1,"column":487}},{"source":"../../src/sort.ts","name":null,"original":{"line":116,"column":24},"generated":{"line":1,"column":489}},{"source":"../../src/sort.ts","name":null,"original":{"line":116,"column":48},"generated":{"line":1,"column":494}},{"source":"../../src/sort.ts","name":null,"original":{"line":116,"column":52},"generated":{"line":1,"column":496}},{"source":"../../src/sort.ts","name":null,"original":{"line":119,"column":6},"generated":{"line":1,"column":503}},{"source":"../../src/sort.ts","name":null,"original":{"line":119,"column":16},"generated":{"line":1,"column":512}},{"source":"../../src/sort.ts","name":null,"original":{"line":119,"column":31},"generated":{"line":1,"column":514}},{"source":"../../src/sort.ts","name":null,"original":{"line":120,"column":9},"generated":{"line":1,"column":517}},{"source":"../../src/sort.ts","name":null,"original":{"line":120,"column":11},"generated":{"line":1,"column":525}},{"source":"../../src/sort.ts","name":null,"original":{"line":120,"column":19},"generated":{"line":1,"column":529}},{"source":"../../src/sort.ts","name":null,"original":{"line":120,"column":27},"generated":{"line":1,"column":531}},{"source":"../../src/sort.ts","name":null,"original":{"line":120,"column":27},"generated":{"line":1,"column":533}},{"source":"../../src/sort.ts","name":null,"original":{"line":120,"column":27},"generated":{"line":1,"column":542}}],"sources":{"../../src/sort.ts":"import {isArray} from 'vega-util';\nimport {NonArgAggregateOp} from './aggregate';\nimport {FieldName} from './channeldef';\nimport {DateTime} from './datetime';\n\nexport type SortOrder = 'ascending' | 'descending';\n\n/**\n * A sort definition for transform\n */\nexport interface SortField {\n  /**\n   * The name of the field to sort.\n   */\n  field: FieldName;\n\n  /**\n   * Whether to sort the field in ascending or descending order. One of `\"ascending\"` (default), `\"descending\"`, or `null` (no not sort).\n   */\n  order?: SortOrder | null;\n}\n\nexport interface SortFields {\n  field: FieldName[];\n  order?: SortOrder[];\n}\n\nexport const DEFAULT_SORT_OP = 'min';\n\n/**\n * A sort definition for sorting a discrete scale in an encoding field definition.\n */\n\nexport interface EncodingSortField<F> {\n  /**\n   * The data [field](https://vega.github.io/vega-lite/docs/field.html) to sort by.\n   *\n   * __Default value:__ If unspecified, defaults to the field specified in the outer data reference.\n   */\n  field?: F; // Field is optional because `\"op\": \"count\"` does not require a field.\n  /**\n   * An [aggregate operation](https://vega.github.io/vega-lite/docs/aggregate.html#ops) to perform on the field prior to sorting (e.g., `\"count\"`, `\"mean\"` and `\"median\"`).\n   * An aggregation is required when there are multiple values of the sort field for each encoded data field.\n   * The input data objects will be aggregated, grouped by the encoded data field.\n   *\n   * For a full list of operations, please see the documentation for [aggregate](https://vega.github.io/vega-lite/docs/aggregate.html#ops).\n   *\n   * __Default value:__ `\"sum\"` for stacked plots. Otherwise, `\"min\"`.\n   */\n  op?: NonArgAggregateOp;\n\n  /**\n   * The sort order. One of `\"ascending\"` (default), `\"descending\"`, or `null` (no not sort).\n   */\n  order?: SortOrder | null;\n}\n\nexport interface SortByEncoding {\n  /**\n   * The [encoding channel](https://vega.github.io/vega-lite/docs/encoding.html#channels) to sort by (e.g., `\"x\"`, `\"y\"`)\n   */\n  encoding: SortByChannel;\n\n  /**\n   * The sort order. One of `\"ascending\"` (default), `\"descending\"`, or `null` (no not sort).\n   */\n  order?: SortOrder | null;\n}\n\nexport type SortArray = number[] | string[] | boolean[] | DateTime[];\n\nconst SORT_BY_CHANNEL_INDEX = {\n  x: 1,\n  y: 1,\n  color: 1,\n  fill: 1,\n  stroke: 1,\n  strokeWidth: 1,\n  size: 1,\n  shape: 1,\n  fillOpacity: 1,\n  strokeOpacity: 1,\n  opacity: 1,\n  text: 1\n} as const;\n\nexport type SortByChannel = keyof typeof SORT_BY_CHANNEL_INDEX;\n\nexport function isSortByChannel(c: string): c is SortByChannel {\n  return c in SORT_BY_CHANNEL_INDEX;\n}\n\nexport type SortByChannelDesc =\n  | '-x'\n  | '-y'\n  | '-color'\n  | '-fill'\n  | '-stroke'\n  | '-strokeWidth'\n  | '-size'\n  | '-shape'\n  | '-fillOpacity'\n  | '-strokeOpacity'\n  | '-opacity'\n  | '-text';\n\nexport type AllSortString = SortOrder | SortByChannel | SortByChannelDesc;\n\nexport type Sort<F> = SortArray | AllSortString | EncodingSortField<F> | SortByEncoding | null;\n\nexport function isSortByEncoding<F>(sort: Sort<F>): sort is SortByEncoding {\n  return !!sort && !!sort['encoding'];\n}\n\nexport function isSortField<F>(sort: Sort<F>): sort is EncodingSortField<F> {\n  return !!sort && (sort['op'] === 'count' || !!sort['field']);\n}\n\nexport function isSortArray<F>(sort: Sort<F>): sort is SortArray {\n  return !!sort && isArray(sort);\n}\n"},"lineCount":null}},"error":null,"hash":"ec7e216de5e34f00a07ad7b5e55f678f","cacheData":{"env":{}}}