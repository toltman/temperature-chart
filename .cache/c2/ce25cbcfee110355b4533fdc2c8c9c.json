{"id":"rrEd","dependencies":[{"name":"/home/toltm/data-viz/temperature/node_modules/vega-lite/build/src/compile/header/component.js.map","includedInParent":true,"mtime":499162500000},{"name":"/home/toltm/data-viz/temperature/node_modules/vega-lite/src/compile/header/component.ts","includedInParent":true,"mtime":499162500000},{"name":"/home/toltm/data-viz/temperature/package.json","includedInParent":true,"mtime":1591974399859},{"name":"/home/toltm/data-viz/temperature/node_modules/vega-lite/build/package.json","includedInParent":true,"mtime":499162500000}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.HEADER_TYPES=exports.HEADER_CHANNELS=void 0;const e=[\"row\",\"column\"];exports.HEADER_CHANNELS=e;const o=[\"header\",\"footer\"];exports.HEADER_TYPES=o;"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/compile/header/component.ts","name":null,"original":{"line":11,"column":7},"generated":{"line":1,"column":0}},{"source":"../../../../src/compile/header/component.ts","name":null,"original":{"line":11,"column":7},"generated":{"line":1,"column":13}},{"source":"../../../../src/compile/header/component.ts","name":null,"original":{"line":11,"column":7},"generated":{"line":1,"column":20}},{"source":"../../../../src/compile/header/component.ts","name":null,"original":{"line":11,"column":7},"generated":{"line":1,"column":35}},{"source":"../../../../src/compile/header/component.ts","name":null,"original":{"line":11,"column":7},"generated":{"line":1,"column":43}},{"source":"../../../../src/compile/header/component.ts","name":null,"original":{"line":11,"column":7},"generated":{"line":1,"column":56}},{"source":"../../../../src/compile/header/component.ts","name":null,"original":{"line":11,"column":7},"generated":{"line":1,"column":57}},{"source":"../../../../src/compile/header/component.ts","name":null,"original":{"line":11,"column":7},"generated":{"line":1,"column":64}},{"source":"../../../../src/compile/header/component.ts","name":null,"original":{"line":11,"column":7},"generated":{"line":1,"column":68}},{"source":"../../../../src/compile/header/component.ts","name":null,"original":{"line":11,"column":7},"generated":{"line":1,"column":76}},{"source":"../../../../src/compile/header/component.ts","name":null,"original":{"line":11,"column":7},"generated":{"line":1,"column":89}},{"source":"../../../../src/compile/header/component.ts","name":null,"original":{"line":11,"column":7},"generated":{"line":1,"column":97}},{"source":"../../../../src/compile/header/component.ts","name":null,"original":{"line":11,"column":7},"generated":{"line":1,"column":118}},{"source":"../../../../src/compile/header/component.ts","name":null,"original":{"line":8,"column":7},"generated":{"line":1,"column":120}},{"source":"../../../../src/compile/header/component.ts","name":null,"original":{"line":8,"column":13},"generated":{"line":1,"column":126}},{"source":"../../../../src/compile/header/component.ts","name":null,"original":{"line":8,"column":48},"generated":{"line":1,"column":128}},{"source":"../../../../src/compile/header/component.ts","name":null,"original":{"line":8,"column":49},"generated":{"line":1,"column":129}},{"source":"../../../../src/compile/header/component.ts","name":null,"original":{"line":8,"column":56},"generated":{"line":1,"column":135}},{"source":"../../../../src/compile/header/component.ts","name":null,"original":{"line":11,"column":7},"generated":{"line":1,"column":145}},{"source":"../../../../src/compile/header/component.ts","name":null,"original":{"line":11,"column":7},"generated":{"line":1,"column":153}},{"source":"../../../../src/compile/header/component.ts","name":null,"original":{"line":11,"column":7},"generated":{"line":1,"column":169}},{"source":"../../../../src/compile/header/component.ts","name":null,"original":{"line":11,"column":7},"generated":{"line":1,"column":171}},{"source":"../../../../src/compile/header/component.ts","name":null,"original":{"line":11,"column":13},"generated":{"line":1,"column":177}},{"source":"../../../../src/compile/header/component.ts","name":null,"original":{"line":11,"column":42},"generated":{"line":1,"column":179}},{"source":"../../../../src/compile/header/component.ts","name":null,"original":{"line":11,"column":43},"generated":{"line":1,"column":180}},{"source":"../../../../src/compile/header/component.ts","name":null,"original":{"line":11,"column":53},"generated":{"line":1,"column":189}},{"source":"../../../../src/compile/header/component.ts","name":null,"original":{"line":11,"column":7},"generated":{"line":1,"column":199}},{"source":"../../../../src/compile/header/component.ts","name":null,"original":{"line":11,"column":7},"generated":{"line":1,"column":207}},{"source":"../../../../src/compile/header/component.ts","name":null,"original":{"line":11,"column":7},"generated":{"line":1,"column":220}}],"sources":{"../../../../src/compile/header/component.ts":"/**\n * Utility for generating row / column headers\n */\nimport {Axis as VgAxis, SignalRef, Text} from 'vega';\nimport {FacetFieldDef} from '../../spec/facet';\n\nexport type HeaderChannel = 'row' | 'column';\nexport const HEADER_CHANNELS: HeaderChannel[] = ['row', 'column'];\n\nexport type HeaderType = 'header' | 'footer';\nexport const HEADER_TYPES: HeaderType[] = ['header', 'footer'];\n\nexport interface LayoutHeaderComponentIndex {\n  row?: LayoutHeaderComponent;\n  column?: LayoutHeaderComponent;\n  facet?: LayoutHeaderComponent;\n}\n\n/**\n * A component that represents all header, footers and title of a Vega group with layout directive.\n */\nexport interface LayoutHeaderComponent {\n  title?: Text | SignalRef;\n\n  // TODO: concat can have multiple header / footer.\n  // Need to redesign this part a bit.\n\n  facetFieldDef?: FacetFieldDef<string>;\n\n  /**\n   * An array of header components for headers.\n   * For facet, there should be only one header component, which is data-driven.\n   * For concat, there can be multiple header components that explicitly list different axes.\n   */\n  header?: HeaderComponent[];\n\n  /**\n   * An array of header components for footers.\n   * For facet, there should be only one header component, which is data-driven.\n   * For concat, there can be multiple header components that explicitly list different axes.\n   */\n  footer?: HeaderComponent[];\n}\n\n/**\n * A component that represents one group of row/column-header/footer.\n */\nexport interface HeaderComponent {\n  labels: boolean;\n\n  sizeSignal: {signal: string};\n\n  axes: VgAxis[];\n}\n"},"lineCount":null}},"error":null,"hash":"1b387513e6bf32bf05aad3e885fc7be9","cacheData":{"env":{}}}