{"id":"HkP5","dependencies":[{"name":"/home/toltm/data-viz/temperature/node_modules/vega-lite/build/src/spec/repeat.js.map","includedInParent":true,"mtime":499162500000},{"name":"/home/toltm/data-viz/temperature/node_modules/vega-lite/src/spec/repeat.ts","includedInParent":true,"mtime":499162500000},{"name":"/home/toltm/data-viz/temperature/package.json","includedInParent":true,"mtime":1591974399859},{"name":"/home/toltm/data-viz/temperature/node_modules/vega-lite/build/package.json","includedInParent":true,"mtime":499162500000},{"name":"vega-util","loc":{"line":1,"column":24},"parent":"/home/toltm/data-viz/temperature/node_modules/vega-lite/build/src/spec/repeat.js","resolved":"/home/toltm/data-viz/temperature/node_modules/vega-util/index.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.isRepeatSpec=r,exports.isLayerRepeatSpec=t;var e=require(\"vega-util\");function r(e){return\"repeat\"in e}function t(r){return!(0,e.isArray)(r.repeat)&&r.repeat.layer}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../src/spec/repeat.ts","name":null,"original":{"line":65,"column":1},"generated":{"line":1,"column":0}},{"source":"../../../src/spec/repeat.ts","name":null,"original":{"line":65,"column":1},"generated":{"line":1,"column":13}},{"source":"../../../src/spec/repeat.ts","name":null,"original":{"line":65,"column":1},"generated":{"line":1,"column":20}},{"source":"../../../src/spec/repeat.ts","name":null,"original":{"line":65,"column":1},"generated":{"line":1,"column":35}},{"source":"../../../src/spec/repeat.ts","name":null,"original":{"line":65,"column":1},"generated":{"line":1,"column":43}},{"source":"../../../src/spec/repeat.ts","name":null,"original":{"line":65,"column":1},"generated":{"line":1,"column":56}},{"source":"../../../src/spec/repeat.ts","name":null,"original":{"line":65,"column":1},"generated":{"line":1,"column":57}},{"source":"../../../src/spec/repeat.ts","name":null,"original":{"line":65,"column":1},"generated":{"line":1,"column":64}},{"source":"../../../src/spec/repeat.ts","name":null,"original":{"line":65,"column":1},"generated":{"line":1,"column":68}},{"source":"../../../src/spec/repeat.ts","name":null,"original":{"line":65,"column":1},"generated":{"line":1,"column":76}},{"source":"../../../src/spec/repeat.ts","name":null,"original":{"line":65,"column":1},"generated":{"line":1,"column":89}},{"source":"../../../src/spec/repeat.ts","name":null,"original":{"line":65,"column":1},"generated":{"line":1,"column":91}},{"source":"../../../src/spec/repeat.ts","name":null,"original":{"line":65,"column":1},"generated":{"line":1,"column":99}},{"source":"../../../src/spec/repeat.ts","name":null,"original":{"line":65,"column":1},"generated":{"line":1,"column":117}},{"source":"../../../src/spec/repeat.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":119}},{"source":"../../../src/spec/repeat.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":123}},{"source":"../../../src/spec/repeat.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":125}},{"source":"../../../src/spec/repeat.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":133}},{"source":"../../../src/spec/repeat.ts","name":null,"original":{"line":59,"column":6},"generated":{"line":1,"column":146}},{"source":"../../../src/spec/repeat.ts","name":null,"original":{"line":59,"column":16},"generated":{"line":1,"column":155}},{"source":"../../../src/spec/repeat.ts","name":null,"original":{"line":59,"column":29},"generated":{"line":1,"column":157}},{"source":"../../../src/spec/repeat.ts","name":null,"original":{"line":60,"column":9},"generated":{"line":1,"column":160}},{"source":"../../../src/spec/repeat.ts","name":null,"original":{"line":60,"column":9},"generated":{"line":1,"column":166}},{"source":"../../../src/spec/repeat.ts","name":null,"original":{"line":60,"column":21},"generated":{"line":1,"column":177}},{"source":"../../../src/spec/repeat.ts","name":null,"original":{"line":63,"column":6},"generated":{"line":1,"column":179}},{"source":"../../../src/spec/repeat.ts","name":null,"original":{"line":63,"column":16},"generated":{"line":1,"column":188}},{"source":"../../../src/spec/repeat.ts","name":null,"original":{"line":63,"column":34},"generated":{"line":1,"column":190}},{"source":"../../../src/spec/repeat.ts","name":null,"original":{"line":64,"column":9},"generated":{"line":1,"column":193}},{"source":"../../../src/spec/repeat.ts","name":null,"original":{"line":64,"column":10},"generated":{"line":1,"column":201}},{"source":"../../../src/spec/repeat.ts","name":null,"original":{"line":64,"column":18},"generated":{"line":1,"column":203}},{"source":"../../../src/spec/repeat.ts","name":null,"original":{"line":64,"column":18},"generated":{"line":1,"column":205}},{"source":"../../../src/spec/repeat.ts","name":null,"original":{"line":64,"column":18},"generated":{"line":1,"column":214}},{"source":"../../../src/spec/repeat.ts","name":null,"original":{"line":64,"column":23},"generated":{"line":1,"column":216}},{"source":"../../../src/spec/repeat.ts","name":null,"original":{"line":64,"column":34},"generated":{"line":1,"column":225}},{"source":"../../../src/spec/repeat.ts","name":null,"original":{"line":64,"column":39},"generated":{"line":1,"column":227}},{"source":"../../../src/spec/repeat.ts","name":null,"original":{"line":64,"column":34},"generated":{"line":1,"column":234}}],"sources":{"../../../src/spec/repeat.ts":"import {isArray} from 'vega-util';\nimport {GenericSpec, LayerSpec} from '.';\nimport {FieldName} from '../channeldef';\nimport {BaseSpec, GenericCompositionLayoutWithColumns, ResolveMixins} from './base';\nimport {FacetedUnitSpec, UnitSpec} from './unit';\n\nexport interface RepeatMapping {\n  /**\n   * An array of fields to be repeated vertically.\n   */\n  row?: string[];\n\n  /**\n   * An array of fields to be repeated horizontally.\n   */\n  column?: string[];\n}\n\nexport interface LayerRepeatMapping extends RepeatMapping {\n  /**\n   * An array of fields to be repeated as layers.\n   */\n  layer: string[];\n}\n\nexport type RepeatSpec = NonLayerRepeatSpec | LayerRepeatSpec;\n\n/**\n * Base interface for a repeat specification.\n */\nexport interface NonLayerRepeatSpec extends BaseSpec, GenericCompositionLayoutWithColumns, ResolveMixins {\n  /**\n   * Definition for fields to be repeated. One of:\n   * 1) An array of fields to be repeated. If `\"repeat\"` is an array, the field can be referred to as `{\"repeat\": \"repeat\"}`. The repeated views are laid out in a wrapped row. You can set the number of columns to control the wrapping.\n   * 2) An object that maps `\"row\"` and/or `\"column\"` to the listed fields to be repeated along the particular orientations. The objects `{\"repeat\": \"row\"}` and `{\"repeat\": \"column\"}` can be used to refer to the repeated field respectively.\n   */\n  repeat: string[] | RepeatMapping;\n\n  /**\n   * A specification of the view that gets repeated.\n   */\n  spec: GenericSpec<FacetedUnitSpec, LayerSpec, RepeatSpec, FieldName>;\n}\n\nexport interface LayerRepeatSpec extends BaseSpec, GenericCompositionLayoutWithColumns, ResolveMixins {\n  /**\n   * Definition for fields to be repeated. One of:\n   * 1) An array of fields to be repeated. If `\"repeat\"` is an array, the field can be referred to as `{\"repeat\": \"repeat\"}`. The repeated views are laid out in a wrapped row. You can set the number of columns to control the wrapping.\n   * 2) An object that maps `\"row\"` and/or `\"column\"` to the listed fields to be repeated along the particular orientations. The objects `{\"repeat\": \"row\"}` and `{\"repeat\": \"column\"}` can be used to refer to the repeated field respectively.\n   */\n  repeat: LayerRepeatMapping;\n\n  /**\n   * A specification of the view that gets repeated.\n   */\n  spec: LayerSpec | UnitSpec;\n}\n\nexport function isRepeatSpec(spec: BaseSpec): spec is RepeatSpec {\n  return 'repeat' in spec;\n}\n\nexport function isLayerRepeatSpec(spec: RepeatSpec): spec is LayerRepeatSpec {\n  return !isArray(spec.repeat) && spec.repeat['layer'];\n}\n"},"lineCount":null}},"error":null,"hash":"8b597c86d52173dbf1140f2894785139","cacheData":{"env":{}}}